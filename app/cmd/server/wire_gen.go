// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/bighuangbee/face_search2/app/internal/data"
	"github.com/bighuangbee/face_search2/app/internal/server"
	"github.com/bighuangbee/face_search2/app/internal/service/face"
	"github.com/bighuangbee/face_search2/pkg/conf"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"github.com/nacos-group/nacos-sdk-go/clients/naming_client"
)

import (
	_ "go.uber.org/automaxprocs"
)

// Injectors from wire.go:

// wireApp init kratos application.
func wireApp(bootstrap *conf.Bootstrap, logger log.Logger, iNamingClient naming_client.INamingClient) (*kratos.App, func(), error) {
	dataData, err := data.NewData(bootstrap, logger, iNamingClient)
	if err != nil {
		return nil, nil, err
	}
	faceRecognizeApp := face.NewFaceRecognizeApp(logger, bootstrap, dataData)
	httpServer := server.NewHTTPServer(bootstrap, logger, faceRecognizeApp)
	app := newApp(logger, httpServer, iNamingClient)
	return app, func() {
	}, nil
}
